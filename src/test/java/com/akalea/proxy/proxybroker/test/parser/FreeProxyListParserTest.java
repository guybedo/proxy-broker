package com.akalea.proxy.proxybroker.test.parser;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import org.apache.commons.io.FileUtils;
import org.junit.Assert;
import org.junit.Test;

import com.akalea.proxy.proxybroker.domain.Proxy;
import com.akalea.proxy.proxybroker.domain.parser.ProxyListsParser;
import com.google.common.collect.Sets;

import junit.framework.TestCase;

public class FreeProxyListParserTest extends TestCase {

    @Test
    public void test() throws IOException {
        Set<String> expected =
            Sets.newHashSet(
                "5.23.102.194:52803",
                "41.180.65.27:43787",
                "46.63.71.13:8080",
                "182.52.51.59:38238",
                "118.172.201.49:30558",
                "45.235.87.65:53781",
                "77.94.144.164:3128",
                "2020-02-07:1637",
                "94.230.158.37:39509",
                "171.100.9.126:49163",
                "93.91.112.247:41258",
                "176.110.121.90:21776",
                "202.179.7.158:23500",
                "41.164.247.250:38460",
                "180.180.124.248:60098",
                "196.216.220.201:53281",
                "103.36.126.14:43999",
                "5.58.85.32:59824",
                "118.175.93.94:45175",
                "186.249.75.6:61982",
                "197.210.217.66:36188",
                "190.149.212.170:58043",
                "1.20.100.227:57396",
                "1.2.169.12:47678",
                "80.90.88.147:33617",
                "24.172.82.94:53281",
                "89.250.149.114:60981",
                "118.173.232.5:34413",
                "103.31.251.25:8080",
                "87.255.27.163:3128",
                "46.241.120.230:32412",
                "2020-02-10:1944",
                "46.235.71.241:8080",
                "148.251.200.194:1080",
                "200.89.99.30:32408",
                "188.6.197.119:30742",
                "46.198.141.82:31870",
                "176.98.76.203:40328",
                "87.99.93.101:43944",
                "101.255.40.18:31558",
                "194.12.121.100:61600",
                "200.110.174.130:8080",
                "177.54.224.203:57871",
                "201.20.92.102:33490",
                "196.22.221.2:56035",
                "103.76.45.142:8080",
                "181.191.4.163:36558",
                "173.44.34.106:34276",
                "87.103.131.124:45414",
                "95.160.17.142:40472",
                "190.214.9.10:41572",
                "2020-02-08:2058",
                "186.46.120.230:44987",
                "185.131.62.250:53281",
                "165.22.68.214:8118",
                "193.193.240.34:45944",
                "61.118.35.94:55725",
                "191.5.0.79:53281",
                "94.232.126.225:32836",
                "203.77.252.250:54598",
                "197.159.12.167:59369",
                "197.211.39.16:33289",
                "178.62.238.61:8118",
                "95.67.65.18:53281",
                "179.124.242.34:41886",
                "150.129.250.28:33846",
                "197.245.230.122:48918",
                "182.253.204.66:34967",
                "102.69.192.32:51962",
                "3.89.124.138:3128",
                "177.67.219.1:61416",
                "195.239.178.110:33246",
                "2020-02-11:2098",
                "195.182.22.178:46916",
                "157.119.207.36:6666",
                "139.5.71.126:23500",
                "36.89.229.13:33389",
                "89.250.221.106:53281",
                "27.116.61.46:34587",
                "177.94.206.67:60666",
                "178.75.21.109:36143",
                "86.110.189.118:56710",
                "47.56.65.69:8118",
                "118.173.233.31:59669",
                "191.7.208.81:50626",
                "103.68.18.118:8080",
                "85.90.215.111:3128",
                "202.150.143.59:43921",
                "132.255.92.34:53281",
                "103.75.34.121:59015",
                "188.129.161.55:36631",
                "187.94.31.237:33296",
                "123.200.31.226:53281",
                "37.255.134.142:8080",
                "200.52.141.162:53281",
                "182.52.238.119:40456",
                "80.73.87.198:59175",
                "165.22.101.134:8080",
                "188.138.250.83:59538",
                "170.81.141.37:53281",
                "167.172.57.5:8118",
                "186.219.210.86:33668",
                "182.53.197.87:61603",
                "2020-02-09:1938",
                "154.127.32.89:60020");

        List<Proxy> proxies =
            new ProxyListsParser().parse(
                FileUtils.readFileToString(
                    new File(
                        this.getClass()
                            .getClassLoader()
                            .getResource("ssl-proxies.html")
                            .getFile())));
        Set<String> actual =
            proxies
                .stream()
                .map(p -> p.getUrl())
                .collect(Collectors.toSet());
        Assert.assertEquals(expected, actual);
    }

}
